#!/usr/bin/python

import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

with open("trajectory.txt") as f:
    data = f.read()

data = data.split('\n')

x = [float(data[i][:].split()[0]) for i in range(0, len(data) - 1)]
y = [float(data[i][:].split()[1]) for i in range(0, len(data) - 1)]
theta = [float(data[i][:].split()[2]) for i in range(0, len(data) - 1)]

xDot = [float(data[i][:].split()[3]) for i in range(0, len(data) - 1)]
yDot = [float(data[i][:].split()[4]) for i in range(0, len(data) - 1)]

#fig = plt.figure(1)

#ax1 = fig.gca(projection='3d')

#ax1.set_xlabel('z')
#ax1.set_ylabel('y')
#ax1.set_zlabel('x')

#markers_on = [0, -1]
#fig.subplot(211)
#ax1.plot(theta, y, x, '-bD', ms=4, label='Trajectory', markevery=markers_on)
#fig.subplot(212)
#plot(xDot, yDot, '-rD', ms=2, label='Control Input')


#plt.show()


fig = plt.figure(figsize=plt.figaspect(2.))
fig.suptitle('System change')
ax = fig.add_subplot(2, 1, 1)
l = ax.plot(x, xDot, 'k--', label='Change in x')
ax.grid(True)
ax.set_ylabel('Damped oscillation')

#################
# Second subplot
#################
ax = fig.add_subplot(2, 1, 2, projection='3d')
markers_on = [0, -1]
ax.plot(theta, y, x, '-bD', ms=4, label='Trajectory', markevery=markers_on)


leg = ax.legend()

plt.show()

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation

fig, ax = plt.subplots()

x = np.arange(0, 2*np.pi, 0.01)
line, = ax.plot(x, np.sin(x))


def animate(i):
    line.set_ydata(np.sin(x + i/10.0))  # update the data
    return line,


# Init only required for blitting to give a clean slate.
def init():
    line.set_ydata(np.ma.array(x, mask=True))
    return line,

ani = animation.FuncAnimation(fig, animate, np.arange(1, 200), init_func=init,
                              interval=25, blit=True)
plt.show()

